apiVersion: v1
kind: Pod
metadata:
  name: pod-redirects-all-ports
  labels:
    app: pod-redirects-all-ports
spec:
      containers:
      - name: other-container
        image: buoyantio/cni-iptables-tester:v1
        env:
         - name: PORT
           value: "9090"
        command: ["go", "run", "/go/test_service/test_service.go"]
        ports:
        - name: http
          containerPort: 9090
      - name: proxy-stub
        image: buoyantio/cni-iptables-tester:v1
        env:
         - name: PORT
           value: "8080"
         - name: AM_I_THE_PROXY
           value: "yes"
        command: ["go", "run", "/go/test_service/test_service.go"]
        securityContext:
          privileged: false
          runAsUser: 2102
        ports:
        - name: http
          containerPort: 8080
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_BIND_TIMEOUT
          value: 10s
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://linkerd-proxy-api.linkerd.svc.cluster.local:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: gcr.io/linkerd-io/proxy:dev-eff66c36-x37y
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-metrics
        readinessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
---
apiVersion: v1
kind: Service
metadata:
  name: svc-pod-redirects-all-ports
spec:
  selector:
    app: pod-redirects-all-ports
  ports:
  - name: http
    port: 8080
